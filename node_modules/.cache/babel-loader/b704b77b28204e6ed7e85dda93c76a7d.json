{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Desktop/web/hero_admin_panel_template/src/components/heroesFilters/HeroesFilters.js\",\n    _s = $RefreshSig$();\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\nimport { useEffect } from \"react\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { filtersFetching, filtersFetched, filtersFetchingError } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeroesFilters = () => {\n  _s();\n\n  const {\n    request\n  } = useHttp();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(filtersFetching());\n    request(`http://localhost:3001/filters`).then(data => console.log(data, 'Успех')).then(data => dispatch(filtersFetched(data))).ca; // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card shadow-lg mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"\\u041E\\u0442\\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0433\\u0435\\u0440\\u043E\\u0435\\u0432 \\u043F\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark active\",\n          children: \"\\u0412\\u0441\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          children: \"\\u041E\\u0433\\u043E\\u043D\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"\\u0412\\u043E\\u0434\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"\\u0412\\u0435\\u0442\\u0435\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          children: \"\\u0417\\u0435\\u043C\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeroesFilters, \"F5jZrJPDSOT99EMlsNWI9W9WjV0=\", false, function () {\n  return [useHttp, useDispatch];\n});\n\n_c = HeroesFilters;\nexport default HeroesFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroesFilters\");","map":{"version":3,"sources":["/Users/ivan/Desktop/web/hero_admin_panel_template/src/components/heroesFilters/HeroesFilters.js"],"names":["useEffect","useHttp","filtersFetching","filtersFetched","filtersFetchingError","useDispatch","HeroesFilters","request","dispatch","then","data","console","log","ca"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,oBAA1C,QAAsE,eAAtE;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM;AAAEC,IAAAA;AAAF,MAAcN,OAAO,EAA3B;AACA,QAAMO,QAAQ,GAAGH,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AACAK,IAAAA,OAAO,CAAE,+BAAF,CAAP,CACKE,IADL,CACUC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,OAAlB,CADlB,EAEKD,IAFL,CAEUC,IAAI,IAAIF,QAAQ,CAACL,cAAc,CAACO,IAAD,CAAf,CAF1B,EAGKG,EAHL,CAFY,CAMZ;AACH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5BD;;GAAMP,a;UAEkBL,O,EACHI,W;;;KAHfC,a;AA8BN,eAAeA,aAAf","sourcesContent":["\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nimport { useEffect } from \"react\";\n\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { filtersFetching, filtersFetched, filtersFetchingError } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\n\n\nconst HeroesFilters = () => {\n\n    const { request } = useHttp()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(filtersFetching())\n        request(`http://localhost:3001/filters`)\n            .then(data => console.log(data, 'Успех'))\n            .then(data => dispatch(filtersFetched(data)))\n            .ca\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    <button className=\"btn btn-outline-dark active\">Все</button>\n                    <button className=\"btn btn-danger\">Огонь</button>\n                    <button className=\"btn btn-primary\">Вода</button>\n                    <button className=\"btn btn-success\">Ветер</button>\n                    <button className=\"btn btn-secondary\">Земля</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;"]},"metadata":{},"sourceType":"module"}