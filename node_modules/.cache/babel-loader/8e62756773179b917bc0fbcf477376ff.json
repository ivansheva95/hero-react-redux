{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Desktop/web/hero_admin_panel_template/src/components/heroesAddForm/HeroesAddForm.js\",\n    _s = $RefreshSig$();\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\nimport { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { heroCreated } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeroesAddForm = () => {\n  _s();\n\n  const [heroName, setHeroName] = useState(''),\n        [heroDesc, setHeroDesc] = useState(''),\n        [heroElement, setHeroElement] = useState('');\n  const {\n    filters,\n    filtersLoadingStatus\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    request\n  } = useHttp();\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const newHero = {\n      id: uuid(),\n      name: heroName,\n      description: heroDesc,\n      element: heroElement\n    };\n    request(`http://localhost:3001/heroes`, 'POST', JSON.stringify(newHero)).then(res => console.log(res, \"Отправка успешна\")).then(dispatch(heroCreated(newHero))).catch(err => console.log(err));\n    setHeroName('');\n    setHeroDesc('');\n    setHeroElement('');\n  };\n\n  const renderFilters = (filters, status) => {\n    if (status === 'loading') {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this);\n    } else if (status === 'error') {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    className: \"border p-4 shadow-lg rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label fs-4\",\n        children: \"\\u0418\\u043C\\u044F \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0433\\u0435\\u0440\\u043E\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        name: \"name\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"\\u041A\\u0430\\u043A \\u043C\\u0435\\u043D\\u044F \\u0437\\u043E\\u0432\\u0443\\u0442?\",\n        value: heroName,\n        onChange: event => setHeroName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        className: \"form-label fs-4\",\n        children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        name: \"text\",\n        className: \"form-control\",\n        id: \"text\",\n        placeholder: \"\\u0427\\u0442\\u043E \\u044F \\u0443\\u043C\\u0435\\u044E?\",\n        style: {\n          \"height\": '130px'\n        },\n        value: heroDesc,\n        onChange: event => setHeroDesc(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"element\",\n        className: \"form-label\",\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442 \\u0433\\u0435\\u0440\\u043E\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        required: true,\n        className: \"form-select\",\n        id: \"element\",\n        name: \"element\",\n        value: heroElement,\n        onChange: event => setHeroElement(event.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"\\u042F \\u0432\\u043B\\u0430\\u0434\\u0435\\u044E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u043C...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeroesAddForm, \"q8e3iuv9VlpWxmpr4bhxJW+Fczg=\", false, function () {\n  return [useSelector, useDispatch, useHttp];\n});\n\n_c = HeroesAddForm;\nexport default HeroesAddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroesAddForm\");","map":{"version":3,"sources":["/Users/ivan/Desktop/web/hero_admin_panel_template/src/components/heroesAddForm/HeroesAddForm.js"],"names":["useState","v4","uuid","useHttp","useDispatch","useSelector","heroCreated","HeroesAddForm","heroName","setHeroName","heroDesc","setHeroDesc","heroElement","setHeroElement","filters","filtersLoadingStatus","state","dispatch","request","onSubmitHandler","event","preventDefault","newHero","id","name","description","element","JSON","stringify","then","res","console","log","catch","err","renderFilters","status","target","value"],"mappings":"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","sourcesContent":["\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\n\nimport { useState } from \"react\"\nimport { v4 as uuid } from \"uuid\"\nimport { useHttp } from \"../../hooks/http.hook\"\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { heroCreated } from '../../actions'\n\nconst HeroesAddForm = () => {\n    const [heroName, setHeroName] = useState(''),\n          [heroDesc, setHeroDesc] = useState(''),\n          [heroElement, setHeroElement] = useState('')\n\n    const { filters, filtersLoadingStatus } = useSelector(state => state)\n    const dispatch = useDispatch()\n    const { request } = useHttp()\n\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault()\n\n        const newHero = {\n            id: uuid(),\n            name: heroName,\n            description: heroDesc,\n            element: heroElement\n        }   \n\n\n        request(`http://localhost:3001/heroes`, 'POST', JSON.stringify(newHero))\n            .then(res => console.log(res, \"Отправка успешна\"))\n            .then(dispatch(heroCreated(newHero)))\n            .catch(err => console.log(err))\n\n            \n        setHeroName('')\n        setHeroDesc('')\n        setHeroElement('')\n    }\n\n    const renderFilters = (filters, status) => {\n        if(status === 'loading') {\n            return <option>загрузка элементов</option>\n        } else if (status === 'error') {\n            \n        }\n    }\n\n    return (\n        <form onSubmit={onSubmitHandler} className=\"border p-4 shadow-lg rounded\">\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={event => setHeroName(event.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDesc}\n                    onChange={event => setHeroDesc(event.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={event => setHeroElement(event.target.value)}>\n                    <option >Я владею элементом...</option>\n\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;"]},"metadata":{},"sourceType":"module"}