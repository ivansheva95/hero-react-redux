{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [process, setProcess] = useState('waiting');\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {\n    'Content-Type': 'application/json'\n  }) => {\n    // setProcess('loading');\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (e) {\n      // setProcess('error');\n      throw e;\n    }\n  }, []); // const clearError = useCallback(() => {\n  // setProcess('loading');\n  // }, []);\n\n  return {\n    request // clearError, \n    // process, \n    // setProcess\n\n  };\n};\n\n_s(useHttp, \"76p2v+oxiTeQKZYyS/zvia3G2D0=\");","map":{"version":3,"sources":["/Users/ivan/Desktop/web/hero_admin_panel_template/src/hooks/http.hook.js"],"names":["useCallback","useHttp","process","setProcess","useState","request","url","method","body","headers","response","fetch","ok","Error","status","data","json","e"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,SAAD,CAAtC;AAEA,QAAMC,OAAO,GAAGL,WAAW,CAAC,OAAOM,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG;AAAC,oBAAgB;AAAjB,GAAnD,KAA4F;AAEpH;AAEA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAAN,CAA5B;;AAEA,UAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAW,mBAAkBP,GAAI,aAAYI,QAAQ,CAACI,MAAO,EAA7D,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACH,KAVD,CAUE,OAAME,CAAN,EAAS;AACP;AACA,YAAMA,CAAN;AACH;AACJ,GAlB0B,EAkBxB,EAlBwB,CAA3B,CAHyB,CAuBzB;AACI;AACJ;;AAEA,SAAO;AAACZ,IAAAA,OAAD,CACC;AACA;AACA;;AAHD,GAAP;AAKH,CAhCM;;GAAMJ,O","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}"]},"metadata":{},"sourceType":"module"}